package org.proteored.miapeapi.xml.ge.adapter;

import org.proteored.miapeapi.cv.ge.ImageDimensionUnit;
import org.proteored.miapeapi.cv.ge.ImageFormat;
import org.proteored.miapeapi.cv.ge.ImageResolutionUnit;
import org.proteored.miapeapi.interfaces.Adapter;
import org.proteored.miapeapi.interfaces.ge.ImageGelElectrophoresis;
import org.proteored.miapeapi.xml.ge.autogenerated.GEImage;
import org.proteored.miapeapi.xml.ge.autogenerated.ObjectFactory;
import org.proteored.miapeapi.xml.ge.util.GEControlVocabularyXmlFactory;
import org.proteored.miapeapi.xml.util.MiapeXmlUtil;

public class ImageAdapter implements Adapter<GEImage> {
	private final ObjectFactory factory;
	private final GEControlVocabularyXmlFactory cvFactory;
	private final ImageGelElectrophoresis image;

	public ImageAdapter(ImageGelElectrophoresis image2, ObjectFactory factory2,
			GEControlVocabularyXmlFactory cvFactory2) {
		this.cvFactory = cvFactory2;
		this.factory = factory2;
		this.image = image2;
	}

	@Override
	public GEImage adapt() {
		GEImage imageXML = factory.createGEImage();
		imageXML.setId(MiapeXmlUtil.IdentifierPrefixes.IMAGE.getPrefix() + image.getId());

		imageXML.setBitDepth(image.getBitDepth());
		imageXML.setDimensionX(cvFactory.createParamUnit(image.getDimensionX(),
				image.getDimensionUnit(), ImageDimensionUnit.getInstance(cvFactory.getCvManager())));
		imageXML.setDimensionY(cvFactory.createParamUnit(image.getDimensionY(),
				image.getDimensionUnit(), ImageDimensionUnit.getInstance(cvFactory.getCvManager())));
		imageXML.setFormat(cvFactory.createCV(image.getFormat(), null,
				ImageFormat.getInstance(cvFactory.getCvManager())));
		imageXML.setLocation(image.getLocation());
		imageXML.setName(image.getName());
		imageXML.setOrientation(image.getOrientation());
		if (image.getReferencedGelMatrix() != null)
			imageXML.setGelMatrixRef(MiapeXmlUtil.IdentifierPrefixes.GELMATRIX.getPrefix()
					+ image.getReferencedGelMatrix().getId());

		imageXML.setResolution(cvFactory.createParamUnit(image.getResolution(),
				image.getResolutionUnit(),
				ImageResolutionUnit.getInstance(cvFactory.getCvManager())));

		return imageXML;
	}

}
