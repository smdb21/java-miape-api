package org.proteored.miapeapi.xml.ge.adapter;

import org.proteored.miapeapi.cv.ge.AcquisitionEquipmentType;
import org.proteored.miapeapi.interfaces.Adapter;
import org.proteored.miapeapi.interfaces.ge.ImageAcquisitionEquipment;
import org.proteored.miapeapi.xml.ge.autogenerated.GEImageAcquisitionEquipmentType;
import org.proteored.miapeapi.xml.ge.autogenerated.ObjectFactory;
import org.proteored.miapeapi.xml.ge.util.GEControlVocabularyXmlFactory;
import org.proteored.miapeapi.xml.util.MiapeXmlUtil;

public class ImageAcquisitionEquipmentAdapter implements Adapter<GEImageAcquisitionEquipmentType> {
	private final ObjectFactory factory;
	private final GEControlVocabularyXmlFactory cvFactory;
	private final ImageAcquisitionEquipment acquisitionEquipment;

	public ImageAcquisitionEquipmentAdapter(ImageAcquisitionEquipment acquisitionEquipment2,
			ObjectFactory factory2, GEControlVocabularyXmlFactory cvFactory2) {
		this.acquisitionEquipment = acquisitionEquipment2;
		this.cvFactory = cvFactory2;
		this.factory = factory2;
	}

	@Override
	public GEImageAcquisitionEquipmentType adapt() {
		GEImageAcquisitionEquipmentType acquisitionEquipmentXML = factory
				.createGEImageAcquisitionEquipmentType();

		acquisitionEquipmentXML.setId(MiapeXmlUtil.IdentifierPrefixes.EQUIPMENT.getPrefix()
				+ acquisitionEquipment.getId());
		acquisitionEquipmentXML.setCalibration(acquisitionEquipment.getCalibration());
		acquisitionEquipmentXML.setType(cvFactory.createCV(acquisitionEquipment.getType(), null,
				AcquisitionEquipmentType.getInstance(cvFactory.getCvManager())));
		acquisitionEquipmentXML.setParametersURL(acquisitionEquipment.getParametersUrl());

		return acquisitionEquipmentXML;
	}

}
