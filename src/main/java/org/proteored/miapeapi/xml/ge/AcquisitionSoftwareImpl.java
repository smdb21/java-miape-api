package org.proteored.miapeapi.xml.ge;

import org.proteored.miapeapi.interfaces.ge.ImageAcquisitionSoftware;
import org.proteored.miapeapi.xml.ge.autogenerated.MIAPEGESoftwareType;
import org.proteored.miapeapi.xml.ge.util.GEControlVocabularyXmlFactory;
import org.proteored.miapeapi.xml.util.MiapeXmlUtil;

public class AcquisitionSoftwareImpl implements ImageAcquisitionSoftware {
	protected final MIAPEGESoftwareType miapeSoftwareXML;

	public AcquisitionSoftwareImpl(MIAPEGESoftwareType miapeSoftware) {
		this.miapeSoftwareXML = miapeSoftware;
	}

	@Override
	public String getCatalogNumber() {
		return this.miapeSoftwareXML.getCatalogNumber();
	}

	@Override
	public String getComments() {
		return this.miapeSoftwareXML.getComments();
	}

	@Override
	public String getCustomizations() {
		return this.miapeSoftwareXML.getCustomizations();
	}

	@Override
	public String getDescription() {
		return GEControlVocabularyXmlFactory.getName(this.miapeSoftwareXML.getDescription());
	}

	@Override
	public String getManufacturer() {
		return this.miapeSoftwareXML.getManufacturer();
	}

	@Override
	public String getModel() {
		return this.miapeSoftwareXML.getModel();
	}

	@Override
	public String getName() {
		if (miapeSoftwareXML == null)
			return null;
		return GEControlVocabularyXmlFactory.getName(miapeSoftwareXML.getName());
	}

	@Override
	public String getParameters() {
		return this.miapeSoftwareXML.getParameters();
	}

	@Override
	public String getURI() {
		return this.miapeSoftwareXML.getURI();
	}

	@Override
	public String getVersion() {
		return this.miapeSoftwareXML.getVersion();
	}

	@Override
	public int getId() {
		return MiapeXmlUtil.getIdFromXMLId(miapeSoftwareXML.getId());

	}

}
