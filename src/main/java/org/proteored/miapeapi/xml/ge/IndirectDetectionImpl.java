package org.proteored.miapeapi.xml.ge;

import java.util.List;
import java.util.Set;

import org.proteored.miapeapi.interfaces.Buffer;
import org.proteored.miapeapi.interfaces.Equipment;
import org.proteored.miapeapi.interfaces.ge.IndirectDetection;
import org.proteored.miapeapi.interfaces.ge.IndirectDetectionAgent;
import org.proteored.miapeapi.xml.ge.autogenerated.GEIndirectDetection;
import org.proteored.miapeapi.xml.ge.autogenerated.MIAPEBufferType;
import org.proteored.miapeapi.xml.ge.autogenerated.MIAPEGEEquipmentType;
import org.proteored.miapeapi.xml.ge.autogenerated.MIAPESubstanceType;
import org.proteored.miapeapi.xml.util.MiapeXmlUtil;

import gnu.trove.set.hash.THashSet;

public class IndirectDetectionImpl implements IndirectDetection {
	private final GEIndirectDetection indirectDetectionXML;

	public IndirectDetectionImpl(GEIndirectDetection geIndirectDetection) {
		this.indirectDetectionXML = geIndirectDetection;
	}

	@Override
	public String getDetectionMedium() {
		return indirectDetectionXML.getDetectionMedium();
	}

	@Override
	public String getTransferMedium() {
		return indirectDetectionXML.getTransferMedium();
	}

	@Override
	public Set<IndirectDetectionAgent> getAdditionalAgents() {
		Set<IndirectDetectionAgent> setOfSubstances = new THashSet<IndirectDetectionAgent>();
		List<MIAPESubstanceType> substanceList = indirectDetectionXML.getGEDetectionAdditionalAgent();
		for (MIAPESubstanceType miapeSubstanceItem : substanceList) {
			setOfSubstances.add(new IndirectDetectionAgentImpl(miapeSubstanceItem));
		}
		return setOfSubstances;
	}

	@Override
	public Set<Buffer> getBuffers() {
		Set<Buffer> setOfBuffers = new THashSet<Buffer>();
		List<MIAPEBufferType> substanceList = indirectDetectionXML.getGEDetectionBuffer();
		for (MIAPEBufferType miapeBufferItem : substanceList) {
			setOfBuffers.add(new BufferImpl(miapeBufferItem));
		}
		return setOfBuffers;
	}

	@Override
	public Set<IndirectDetectionAgent> getAgents() {
		Set<IndirectDetectionAgent> setOfSubstances = new THashSet<IndirectDetectionAgent>();
		List<MIAPESubstanceType> substanceList = indirectDetectionXML.getGEDetectionAgent();
		for (MIAPESubstanceType miapeSubstanceItem : substanceList) {
			setOfSubstances.add(new IndirectDetectionAgentImpl(miapeSubstanceItem));
		}
		return setOfSubstances;
	}

	@Override
	public Set<Equipment> getDetectionEquipments() {
		Set<Equipment> setOfEquipments = new THashSet<Equipment>();
		List<MIAPEGEEquipmentType> substanceList = indirectDetectionXML.getGEDetectionEquipment();
		for (MIAPEGEEquipmentType miapeEquipmentItem : substanceList) {
			setOfEquipments.add(new EquipmentImpl(miapeEquipmentItem));
		}
		return setOfEquipments;
	}

	@Override
	public String getName() {
		return indirectDetectionXML.getName();
	}

	@Override
	public String getProtocol() {
		return indirectDetectionXML.getProtocol();
	}

	@Override
	public int getId() {
		return MiapeXmlUtil.getIdFromXMLId(indirectDetectionXML.getId());
	}

}
