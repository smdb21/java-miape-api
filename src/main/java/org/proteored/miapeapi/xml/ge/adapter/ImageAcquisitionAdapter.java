package org.proteored.miapeapi.xml.ge.adapter;

import java.util.List;
import java.util.Set;

import org.proteored.miapeapi.interfaces.Adapter;
import org.proteored.miapeapi.interfaces.Software;
import org.proteored.miapeapi.interfaces.ge.ImageAcquisition;
import org.proteored.miapeapi.interfaces.ge.ImageAcquisitionEquipment;
import org.proteored.miapeapi.interfaces.ge.ImageAcquisitionSoftware;
import org.proteored.miapeapi.xml.ge.autogenerated.GEImageAcquisition;
import org.proteored.miapeapi.xml.ge.autogenerated.GEImageAcquisitionEquipmentType;
import org.proteored.miapeapi.xml.ge.autogenerated.MIAPEGESoftwareType;
import org.proteored.miapeapi.xml.ge.autogenerated.ObjectFactory;
import org.proteored.miapeapi.xml.ge.util.GEControlVocabularyXmlFactory;
import org.proteored.miapeapi.xml.util.MiapeXmlUtil;

public class ImageAcquisitionAdapter implements Adapter<GEImageAcquisition> {
	private final ObjectFactory factory;
	private final GEControlVocabularyXmlFactory cvFactory;
	private final ImageAcquisition imageAcquisition;

	public ImageAcquisitionAdapter(ImageAcquisition imageAcquisition2,
			ObjectFactory factory2, GEControlVocabularyXmlFactory cvFactory2) {
		this.cvFactory = cvFactory2;
		this.factory = factory2;
		this.imageAcquisition = imageAcquisition2;
	}

	@Override
	public GEImageAcquisition adapt() {
		GEImageAcquisition imageAcquisitionXML = factory.createGEImageAcquisition();
		imageAcquisitionXML.setName(imageAcquisition.getName());
		imageAcquisitionXML.setProtocol(imageAcquisition.getProtocol());
		if (imageAcquisition.getReferencedGelMatrix() != null)
			imageAcquisitionXML.setGelMatrixRef(MiapeXmlUtil.IdentifierPrefixes.GELMATRIX.getPrefix() + imageAcquisition.getReferencedGelMatrix().getId());


		if (imageAcquisition.getImageAcquisitionEquipments() != null)
			addEquipments(imageAcquisitionXML.getGEImageAcquisitionEquipment(), imageAcquisition.getImageAcquisitionEquipments());

		if (imageAcquisition.getImageAcquisitionSoftwares() != null)
			addSoftware(imageAcquisitionXML.getGEImageAcquisitionSoftware(), imageAcquisition.getImageAcquisitionSoftwares());

		return imageAcquisitionXML;
	}

	private void addSoftware(
			List<MIAPEGESoftwareType> geImageAcquisitionSoftware,
			Set<ImageAcquisitionSoftware> equipmentSoftwares) {
		for (Software software : equipmentSoftwares)
			geImageAcquisitionSoftware.add(new AcquisitionSoftwareAdapter(software, factory, cvFactory).adapt());

	}

	private void addEquipments(
			List<GEImageAcquisitionEquipmentType> geImageAcquisitionEquipment,
			Set<ImageAcquisitionEquipment> equipments) {
		for (ImageAcquisitionEquipment acquisitionEquipment : equipments){
			geImageAcquisitionEquipment.add(new ImageAcquisitionEquipmentAdapter(acquisitionEquipment, factory, cvFactory).adapt());
		}
	}



}
