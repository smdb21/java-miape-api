package org.proteored.miapeapi.xml.ge.adapter;

import java.util.List;
import java.util.Set;

import org.proteored.miapeapi.interfaces.Adapter;
import org.proteored.miapeapi.interfaces.Buffer;
import org.proteored.miapeapi.interfaces.Equipment;
import org.proteored.miapeapi.interfaces.ge.IndirectDetection;
import org.proteored.miapeapi.interfaces.ge.IndirectDetectionAgent;
import org.proteored.miapeapi.xml.ge.autogenerated.GEIndirectDetection;
import org.proteored.miapeapi.xml.ge.autogenerated.MIAPEBufferType;
import org.proteored.miapeapi.xml.ge.autogenerated.MIAPEGEEquipmentType;
import org.proteored.miapeapi.xml.ge.autogenerated.MIAPESubstanceType;
import org.proteored.miapeapi.xml.ge.autogenerated.ObjectFactory;
import org.proteored.miapeapi.xml.ge.util.GEControlVocabularyXmlFactory;
import org.proteored.miapeapi.xml.util.MiapeXmlUtil;

public class IndirectDetectionAdapter implements Adapter<GEIndirectDetection>{
	private final IndirectDetection indirectDetection;
	private final ObjectFactory factory;
	private final GEControlVocabularyXmlFactory cvFactory;

	public IndirectDetectionAdapter(IndirectDetection indirectDetection2,
			ObjectFactory factory2, GEControlVocabularyXmlFactory cvFactory2) {
		this.cvFactory = cvFactory2;
		this.factory = factory2;
		this.indirectDetection = indirectDetection2;
	}

	@Override
	public GEIndirectDetection adapt() {
		GEIndirectDetection indirectDetectionXML = factory.createGEIndirectDetection();
		indirectDetectionXML.setDetectionMedium(indirectDetection.getDetectionMedium());

		indirectDetectionXML.setId(MiapeXmlUtil.IdentifierPrefixes.INDIRECTDETECTION.getPrefix() + indirectDetection.getId());
		indirectDetectionXML.setName(indirectDetection.getName());
		indirectDetectionXML.setProtocol(indirectDetection.getProtocol());
		indirectDetectionXML.setTransferMedium(indirectDetection.getTransferMedium());

		if (indirectDetection.getAgents() != null)
			addDetectionAgent(indirectDetectionXML.getGEDetectionAgent(), indirectDetection.getAgents());

		if (indirectDetection.getAdditionalAgents() != null)
			addDetectionAgent(indirectDetectionXML.getGEDetectionAdditionalAgent(), indirectDetection.getAdditionalAgents());

		if (indirectDetection.getBuffers() != null)
			addBuffer(indirectDetectionXML.getGEDetectionBuffer(), indirectDetection.getBuffers());

		if (indirectDetection.getDetectionEquipments() != null)
			addEquipment(indirectDetectionXML.getGEDetectionEquipment(), indirectDetection.getDetectionEquipments());

		return indirectDetectionXML;
	}

	private void addEquipment(List<MIAPEGEEquipmentType> geEquipment,
			Set<Equipment> equipments) {
		for (Equipment equipment : equipments)
			geEquipment.add(new EquipmentAdapter(equipment, factory, cvFactory).adapt());

	}

	private void addBuffer(List<MIAPEBufferType> geBuffer,
			Set<Buffer> buffers) {
		for (Buffer buffer : buffers)
			geBuffer.add(new BufferAdapter(buffer, factory, cvFactory).adapt());

	}

	private void addDetectionAgent(List<MIAPESubstanceType> geAgent,
			Set<IndirectDetectionAgent> agents) {
		for (IndirectDetectionAgent agent : agents)
			geAgent.add(new IndirectDetectionAgentAdapter(agent, factory, cvFactory).adapt());


	}

}
