package org.proteored.miapeapi.xml.ge;

import java.util.List;
import java.util.Map;
import java.util.Set;

import org.proteored.miapeapi.interfaces.ge.GelMatrix;
import org.proteored.miapeapi.interfaces.ge.ImageAcquisition;
import org.proteored.miapeapi.interfaces.ge.ImageAcquisitionEquipment;
import org.proteored.miapeapi.interfaces.ge.ImageAcquisitionSoftware;
import org.proteored.miapeapi.xml.ge.autogenerated.GEGelMatrix;
import org.proteored.miapeapi.xml.ge.autogenerated.GEImageAcquisition;
import org.proteored.miapeapi.xml.ge.autogenerated.GEImageAcquisitionEquipmentType;
import org.proteored.miapeapi.xml.ge.autogenerated.GESample;
import org.proteored.miapeapi.xml.ge.autogenerated.MIAPEGESoftwareType;

import gnu.trove.set.hash.THashSet;

public class ImageAcquisitionImpl implements ImageAcquisition {
	private final GEImageAcquisition imageAcquisitionXML;
	private final Map<String, GEGelMatrix> mapGelMatrix;
	private final Map<String, GESample> sampleMap;

	public ImageAcquisitionImpl(GEImageAcquisition imageAcquisitionItem, Map<String, GEGelMatrix> mapGelMatrix,
			Map<String, GESample> sampleMap) {
		this.imageAcquisitionXML = imageAcquisitionItem;
		this.mapGelMatrix = mapGelMatrix;
		this.sampleMap = sampleMap;
	}

	@Override
	public Set<ImageAcquisitionSoftware> getImageAcquisitionSoftwares() {
		Set<ImageAcquisitionSoftware> setOfSoftwares = new THashSet<ImageAcquisitionSoftware>();
		List<MIAPEGESoftwareType> softwareList = imageAcquisitionXML.getGEImageAcquisitionSoftware();
		for (MIAPEGESoftwareType softwareItem : softwareList)
			setOfSoftwares.add(new AcquisitionSoftwareImpl(softwareItem));
		return setOfSoftwares;
	}

	@Override
	public Set<ImageAcquisitionEquipment> getImageAcquisitionEquipments() {
		Set<ImageAcquisitionEquipment> setOfImageAcquisitionEquipment = new THashSet<ImageAcquisitionEquipment>();
		List<GEImageAcquisitionEquipmentType> imageAcquisitionEquipmentList = imageAcquisitionXML
				.getGEImageAcquisitionEquipment();
		for (GEImageAcquisitionEquipmentType imageAcquisitionEquipmentItem : imageAcquisitionEquipmentList)
			setOfImageAcquisitionEquipment.add(new ImageAcquisitionEquipmentImpl(imageAcquisitionEquipmentItem));
		return setOfImageAcquisitionEquipment;
	}

	@Override
	public GelMatrix getReferencedGelMatrix() {
		if (mapGelMatrix.containsKey(imageAcquisitionXML.getGelMatrixRef())) {
			return new GelMatrixImpl(mapGelMatrix.get(imageAcquisitionXML.getGelMatrixRef()), this.sampleMap);
		}
		return null;
	}

	@Override
	public String getName() {
		return imageAcquisitionXML.getName();
	}

	@Override
	public String getProtocol() {
		return imageAcquisitionXML.getProtocol();
	}

}
