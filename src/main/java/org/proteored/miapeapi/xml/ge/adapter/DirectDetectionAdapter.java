package org.proteored.miapeapi.xml.ge.adapter;

import java.util.List;
import java.util.Set;

import org.proteored.miapeapi.interfaces.Adapter;
import org.proteored.miapeapi.interfaces.Buffer;
import org.proteored.miapeapi.interfaces.Equipment;
import org.proteored.miapeapi.interfaces.ge.DirectDetection;
import org.proteored.miapeapi.interfaces.ge.DirectDetectionAgent;
import org.proteored.miapeapi.xml.ge.autogenerated.GEDirectDetection;
import org.proteored.miapeapi.xml.ge.autogenerated.MIAPEBufferType;
import org.proteored.miapeapi.xml.ge.autogenerated.MIAPEGEEquipmentType;
import org.proteored.miapeapi.xml.ge.autogenerated.MIAPESubstanceType;
import org.proteored.miapeapi.xml.ge.autogenerated.ObjectFactory;
import org.proteored.miapeapi.xml.ge.util.GEControlVocabularyXmlFactory;
import org.proteored.miapeapi.xml.util.MiapeXmlUtil;

public class DirectDetectionAdapter implements Adapter<GEDirectDetection>{
	private final ObjectFactory factory;
	private final GEControlVocabularyXmlFactory cvFactory;
	private final DirectDetection directDetection;

	public DirectDetectionAdapter(DirectDetection directDetection,
			ObjectFactory factory, GEControlVocabularyXmlFactory cvFactory) {
		this.cvFactory = cvFactory;
		this.factory = factory;
		this.directDetection = directDetection;
	}

	@Override
	public GEDirectDetection adapt() {
		GEDirectDetection directDetectionXML = factory.createGEDirectDetection();
		directDetectionXML.setId(MiapeXmlUtil.IdentifierPrefixes.DIRECTDETECTION.getPrefix() + directDetection.getId());
		directDetectionXML.setName(directDetection.getName());
		directDetectionXML.setProtocol(directDetection.getProtocol());
		if (directDetection.getAgents() != null)
			addAgent(directDetectionXML.getGEDetectionAgent(), directDetection.getAgents());

		if (directDetection.getAdditionalAgents() != null)
			addAgent(directDetectionXML.getGEDetectionAdditionalAgent(), directDetection.getAdditionalAgents());

		if (directDetection.getBuffers() != null)
			addBuffer(directDetectionXML.getGEDetectionBuffer(), directDetection.getBuffers());

		if (directDetection.getDetectionEquipments() != null)
			addEquipment(directDetectionXML.getGEDetectionEquipment(), directDetection.getDetectionEquipments());

		return directDetectionXML;
	}

	private void addEquipment(List<MIAPEGEEquipmentType> geEquipment,
			Set<Equipment> equipments) {
		for (Equipment equipment : equipments)
			geEquipment.add(new EquipmentAdapter(equipment, factory, cvFactory).adapt());

	}

	private void addBuffer(List<MIAPEBufferType> geBuffer,
			Set<Buffer> buffers) {
		for (Buffer buffer : buffers)
			geBuffer.add(new BufferAdapter(buffer, factory, cvFactory).adapt());

	}

	private void addAgent(List<MIAPESubstanceType> geSubstance, Set<DirectDetectionAgent> agents) {
		for (DirectDetectionAgent agent : agents)
			geSubstance.add(new DirectDetectionAgentAdapter(agent, factory, cvFactory).adapt());

	}



}
