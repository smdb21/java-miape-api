package org.proteored.miapeapi.xml.ge.adapter;

import java.util.List;
import java.util.Set;

import org.proteored.miapeapi.cv.ge.BufferType;
import org.proteored.miapeapi.interfaces.Adapter;
import org.proteored.miapeapi.interfaces.Buffer;
import org.proteored.miapeapi.interfaces.BufferComponent;
import org.proteored.miapeapi.xml.ge.autogenerated.MIAPEBufferType;
import org.proteored.miapeapi.xml.ge.autogenerated.MIAPESubstanceType;
import org.proteored.miapeapi.xml.ge.autogenerated.ObjectFactory;
import org.proteored.miapeapi.xml.ge.util.GEControlVocabularyXmlFactory;
import org.proteored.miapeapi.xml.util.MiapeXmlUtil;

public class BufferAdapter implements Adapter<MIAPEBufferType> {
	private final ObjectFactory factory;
	private final GEControlVocabularyXmlFactory cvFactory;
	private final Buffer buffer;

	public BufferAdapter(Buffer buffer, ObjectFactory factory,
			GEControlVocabularyXmlFactory cvFactory) {
		this.buffer = buffer;
		this.cvFactory = cvFactory;
		this.factory = factory;
	}

	@Override
	public MIAPEBufferType adapt() {
		MIAPEBufferType bufferXML = factory.createMIAPEBufferType();
		bufferXML.setName(buffer.getName());
		bufferXML.setType(cvFactory.createCV(buffer.getType(), null,
				BufferType.getInstance(cvFactory.getCvManager())));
		bufferXML.setDescription(buffer.getDescription());
		bufferXML.setId(MiapeXmlUtil.IdentifierPrefixes.BUFFER.getPrefix() + buffer.getId());
		if (buffer.getComponents() != null)
			addBufferComponent(bufferXML.getMIAPEBufferComponent(), buffer.getComponents());
		return bufferXML;
	}

	private void addBufferComponent(List<MIAPESubstanceType> miapeBufferComponent,
			Set<BufferComponent> components) {
		for (BufferComponent component : components)
			miapeBufferComponent.add(new BufferComponentAdapter(component, factory, cvFactory)
					.adapt());

	}

}
