package org.proteored.miapeapi.xml.ge.adapter;

import java.util.List;
import java.util.Set;

import org.proteored.miapeapi.interfaces.Adapter;
import org.proteored.miapeapi.interfaces.Buffer;
import org.proteored.miapeapi.interfaces.ge.Dimension;
import org.proteored.miapeapi.interfaces.ge.ElectrophoresisProtocol;
import org.proteored.miapeapi.interfaces.ge.GelMatrix;
import org.proteored.miapeapi.xml.ge.autogenerated.GEDimensionType;
import org.proteored.miapeapi.xml.ge.autogenerated.GEElectrophoresisProtocol;
import org.proteored.miapeapi.xml.ge.autogenerated.GEGelMatrix;
import org.proteored.miapeapi.xml.ge.autogenerated.MIAPEBufferType;
import org.proteored.miapeapi.xml.ge.autogenerated.ObjectFactory;
import org.proteored.miapeapi.xml.ge.util.GEControlVocabularyXmlFactory;


public class DimensionAdapter implements Adapter<GEDimensionType> {
	private final Dimension dimension;
	private final ObjectFactory factory;
	private final GEControlVocabularyXmlFactory cvFactory;

	public DimensionAdapter(Dimension dimension, ObjectFactory factory, GEControlVocabularyXmlFactory cvFactory) {
		this.dimension = dimension;
		this.factory = factory;
		this.cvFactory = cvFactory;
	}


	@Override
	public GEDimensionType adapt() {
		GEDimensionType dimensionXML = factory.createGEDimensionType();
		dimensionXML.setDimension(dimension.getDimension());
		dimensionXML.setName(dimension.getName());
		dimensionXML.setSeparationMethod(dimension.getSeparationMethod());

		if (dimension.getLoadingBuffers() != null)
			addLoadingBuffer(dimensionXML.getGELoadingBuffer(), dimension.getLoadingBuffers() );
		if (dimension.getMatrixes() != null)
			addGelMatrix(dimensionXML.getGEGelMatrix(), dimension.getMatrixes());
		if (dimension.getElectrophoresisProtocols() != null)
			addEProtocol(dimensionXML.getGEElectrophoresisProtocol(), dimension.getElectrophoresisProtocols());

		return dimensionXML;
	}

	private void addEProtocol(
			List<GEElectrophoresisProtocol> geElectrophoresisProtocol,
			Set<ElectrophoresisProtocol> electrophoresisProtocols) {
		for (ElectrophoresisProtocol eprotocol : electrophoresisProtocols)
			geElectrophoresisProtocol.add(new EProtocolAdapter(eprotocol, factory, cvFactory).adapt());


	}


	private void addGelMatrix(List<GEGelMatrix> geGelMatrix,
			Set<GelMatrix> matrixes) {

		for (GelMatrix matrix : matrixes) {
			geGelMatrix.add(new GelMatrixAdapter(matrix, factory, cvFactory).adapt());

		}
	}


	private void addLoadingBuffer(List<MIAPEBufferType> geLoadingBuffer,
			Set<Buffer> loadingBuffers) {
		for (Buffer loadingBuffer : loadingBuffers)
			geLoadingBuffer.add(new BufferAdapter(loadingBuffer, factory, cvFactory).adapt());

	}

}
