package org.proteored.miapeapi.xml.ge.adapter;

import java.util.List;
import java.util.Set;

import org.proteored.miapeapi.interfaces.Adapter;
import org.proteored.miapeapi.interfaces.ge.Lane;
import org.proteored.miapeapi.interfaces.ge.SampleApplication;
import org.proteored.miapeapi.xml.ge.autogenerated.GELane;
import org.proteored.miapeapi.xml.ge.autogenerated.GESampleApplication;
import org.proteored.miapeapi.xml.ge.autogenerated.ObjectFactory;
import org.proteored.miapeapi.xml.ge.util.GEControlVocabularyXmlFactory;

public class SampleApplicationAdapter implements Adapter<GESampleApplication> {
	private final ObjectFactory factory;
	private final GEControlVocabularyXmlFactory cvFactory;
	private final SampleApplication sampleApplication;

	public SampleApplicationAdapter(SampleApplication sampleApplication2,
			ObjectFactory factory2, GEControlVocabularyXmlFactory cvFactory2) {
		this.cvFactory = cvFactory2;
		this.factory = factory2;
		this.sampleApplication = sampleApplication2;
	}

	@Override
	public GESampleApplication adapt() {
		GESampleApplication sampleApplicationXML = factory.createGESampleApplication();
		sampleApplicationXML.setName(sampleApplication.getName());
		sampleApplicationXML.setDescription(sampleApplication.getDescription());

		if (sampleApplication.getLanes() != null)
			addLane(sampleApplicationXML.getGELane(), sampleApplication.getLanes());

		return sampleApplicationXML;
	}

	private void addLane(List<GELane> geLane, Set<Lane> lanes) {
		for (Lane lane : lanes)
			geLane.add(new LaneAdapter(lane, factory, cvFactory).adapt());

	}


}
