package org.proteored.miapeapi.xml.ms.adapter;

import org.proteored.miapeapi.cv.ms.SoftwareName;
import org.proteored.miapeapi.cv.msi.DataTransformation;
import org.proteored.miapeapi.interfaces.Adapter;
import org.proteored.miapeapi.interfaces.Software;
import org.proteored.miapeapi.xml.ms.autogenerated.MIAPESoftwareType;
import org.proteored.miapeapi.xml.ms.autogenerated.ObjectFactory;
import org.proteored.miapeapi.xml.ms.util.MsControlVocabularyXmlFactory;

public class SoftwareAdapter implements Adapter<MIAPESoftwareType> {
	private final Software software;
	private final ObjectFactory factory;
	private final MsControlVocabularyXmlFactory cvFactory;

	public SoftwareAdapter(Software software, ObjectFactory factory,
			MsControlVocabularyXmlFactory cvFactory) {
		this.software = software;
		this.factory = factory;
		this.cvFactory = cvFactory;
	}

	@Override
	public MIAPESoftwareType adapt() {
		MIAPESoftwareType softwareTypeXML = factory.createMIAPESoftwareType();
		softwareTypeXML.setCatalogNumber(software.getCatalogNumber());
		softwareTypeXML.setComments(software.getComments());
		softwareTypeXML.setCustomizations(software.getCustomizations());
		softwareTypeXML.setDescription(cvFactory.createCV(software.getDescription(), null,
				DataTransformation.getInstance(cvFactory.getCvManager())));
		softwareTypeXML.setManufacturer(software.getManufacturer());
		softwareTypeXML.setModel(software.getModel());
		softwareTypeXML.setVersion(software.getVersion());
		softwareTypeXML.setParameters(software.getParameters());
		softwareTypeXML.setURI(software.getURI());
		softwareTypeXML.setName(cvFactory.createCV(software.getName(), null,

		SoftwareName.getInstance(cvFactory.getCvManager())));
		return softwareTypeXML;
	}

}
