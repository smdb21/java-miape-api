package org.proteored.miapeapi.xml.ms.adapter;

import org.proteored.miapeapi.cv.ms.MassAnalyzerType;
import org.proteored.miapeapi.cv.ms.ReflectronState;
import org.proteored.miapeapi.interfaces.Adapter;
import org.proteored.miapeapi.interfaces.ms.Analyser;
import org.proteored.miapeapi.xml.ms.autogenerated.MSAnalyzer;
import org.proteored.miapeapi.xml.ms.autogenerated.ObjectFactory;
import org.proteored.miapeapi.xml.ms.util.MsControlVocabularyXmlFactory;

public class AnalyzerAdapter implements Adapter<MSAnalyzer> {

	private final Analyser analyzer;
	private final ObjectFactory factory;
	private final MsControlVocabularyXmlFactory cvFactory;

	public AnalyzerAdapter(Analyser analyzer, ObjectFactory factory,
			MsControlVocabularyXmlFactory cvFactory) {
		this.analyzer = analyzer;
		this.factory = factory;
		this.cvFactory = cvFactory;
	}

	@Override
	public MSAnalyzer adapt() {
		MSAnalyzer xmlAnalyzer = factory.createMSAnalyzer();
		xmlAnalyzer.setName(cvFactory.createCV(analyzer.getName(), null,
				MassAnalyzerType.getInstance(cvFactory.getCvManager())));
		xmlAnalyzer.setReflectron(cvFactory.createCV(analyzer.getReflectron(), null,
				ReflectronState.getInstance(cvFactory.getCvManager())));
		xmlAnalyzer.setDescription(analyzer.getDescription());
		return xmlAnalyzer;
	}

}
