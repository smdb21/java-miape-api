package org.proteored.miapeapi.xml.ms.adapter;

import java.util.Set;

import org.proteored.miapeapi.cv.ms.EsiName;
import org.proteored.miapeapi.cv.ms.SupplyType;
import org.proteored.miapeapi.interfaces.Adapter;
import org.proteored.miapeapi.interfaces.Equipment;
import org.proteored.miapeapi.interfaces.ms.Esi;
import org.proteored.miapeapi.xml.ms.autogenerated.MSESI;
import org.proteored.miapeapi.xml.ms.autogenerated.ObjectFactory;
import org.proteored.miapeapi.xml.ms.util.MsControlVocabularyXmlFactory;

public class EsiAdapter implements Adapter<MSESI> {
	private final Esi esi;
	private final ObjectFactory factory;
	private final MsControlVocabularyXmlFactory cvFactory;

	public EsiAdapter(Esi esi, ObjectFactory factory, MsControlVocabularyXmlFactory cvFactory) {
		this.esi = esi;
		this.factory = factory;
		this.cvFactory = cvFactory;
	}

	@Override
	public MSESI adapt() {
		MSESI xmlEsi = factory.createMSESI();
		xmlEsi.setName(cvFactory.createCV(esi.getName(), null,
				EsiName.getInstance(cvFactory.getCvManager())));
		xmlEsi.setOparameters(esi.getParameters());
		xmlEsi.setSupplyType(cvFactory.createCV(esi.getSupplyType(), null,
				SupplyType.getInstance(cvFactory.getCvManager())));
		final Set<Equipment> interfaces = esi.getInterfaces();
		if (interfaces != null) {
			for (Equipment interfaz : interfaces) {
				xmlEsi.getMSInterface().add(
						new EquipmentAdapter(interfaz, factory, cvFactory).adapt());
			}
		}
		final Set<Equipment> sprayers = esi.getSprayers();
		if (sprayers != null) {
			for (Equipment sprayer : sprayers) {
				xmlEsi.getMSSprayer()
						.add(new EquipmentAdapter(sprayer, factory, cvFactory).adapt());
			}
		}
		return xmlEsi;
	}

}
