package org.proteored.miapeapi.xml.ms.adapter;

import org.proteored.miapeapi.cv.ms.InstrumentModel;
import org.proteored.miapeapi.cv.ms.InstrumentVendor;
import org.proteored.miapeapi.cv.ms.SpectrometerName;
import org.proteored.miapeapi.interfaces.Adapter;
import org.proteored.miapeapi.interfaces.ms.Spectrometer;
import org.proteored.miapeapi.xml.ms.autogenerated.MSSpectrometer;
import org.proteored.miapeapi.xml.ms.autogenerated.ObjectFactory;
import org.proteored.miapeapi.xml.ms.util.MsControlVocabularyXmlFactory;

public class SpectrometerAdapter implements Adapter<MSSpectrometer> {
	private final Spectrometer spectrometer;
	private final ObjectFactory factory;
	MsControlVocabularyXmlFactory cvFactory;

	public SpectrometerAdapter(Spectrometer spectrometer, ObjectFactory factory,
			MsControlVocabularyXmlFactory cvFactory) {
		this.spectrometer = spectrometer;
		this.factory = factory;
		this.cvFactory = cvFactory;
	}

	@Override
	public MSSpectrometer adapt() {
		MSSpectrometer xmlSpectrometer = factory.createMSSpectrometer();
		xmlSpectrometer.setCustomizations(spectrometer.getCustomizations());
		xmlSpectrometer.setCatalogNumber(spectrometer.getCatalogNumber());
		xmlSpectrometer.setComments(spectrometer.getComments());
		xmlSpectrometer.setDescription(spectrometer.getDescription());
		xmlSpectrometer.setManufacturer(cvFactory.createCV(spectrometer.getManufacturer(), null,
				InstrumentVendor.getInstance(cvFactory.getCvManager())));
		xmlSpectrometer.setModel(cvFactory.createCV(spectrometer.getModel(), null,
				InstrumentModel.getInstance(cvFactory.getCvManager())));
		xmlSpectrometer.setName(cvFactory.createCV(spectrometer.getName(), null,
				SpectrometerName.getInstance(cvFactory.getCvManager())));
		xmlSpectrometer.setParameters(spectrometer.getParameters());
		xmlSpectrometer.setURI(spectrometer.getUri());
		xmlSpectrometer.setVersion(spectrometer.getVersion());

		return xmlSpectrometer;
	}

}
