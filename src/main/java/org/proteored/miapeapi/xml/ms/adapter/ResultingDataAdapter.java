package org.proteored.miapeapi.xml.ms.adapter;

import org.proteored.miapeapi.cv.ms.ChromatogramType;
import org.proteored.miapeapi.cv.ms.MSFileType;
import org.proteored.miapeapi.interfaces.Adapter;
import org.proteored.miapeapi.interfaces.ms.ResultingData;
import org.proteored.miapeapi.xml.ms.autogenerated.MSResultingData;
import org.proteored.miapeapi.xml.ms.autogenerated.ObjectFactory;
import org.proteored.miapeapi.xml.ms.util.MsControlVocabularyXmlFactory;

public class ResultingDataAdapter implements Adapter<MSResultingData> {
	private final ResultingData resultingData;
	private final ObjectFactory factory;
	private final MsControlVocabularyXmlFactory cvFactory;

	public ResultingDataAdapter(ResultingData resultingData, ObjectFactory factory,
			MsControlVocabularyXmlFactory cvFactory) {
		this.factory = factory;
		this.cvFactory = cvFactory;
		this.resultingData = resultingData;
	}

	@Override
	public MSResultingData adapt() {
		MSResultingData xmlResultingData = factory.createMSResultingData();
		xmlResultingData.setAdditionalURL(resultingData.getAdditionalUri());
		xmlResultingData.setName(resultingData.getName());
		xmlResultingData.setDataFileType(cvFactory.createCV(resultingData.getDataFileType(), null,
				MSFileType.getInstance(cvFactory.getCvManager())));
		xmlResultingData.setDataFileURL(resultingData.getDataFileUri());
		xmlResultingData.setSRMDescriptor(resultingData.getSRMDescriptor());
		xmlResultingData.setSRMType(cvFactory.createCV(resultingData.getSRMType(), null,
				ChromatogramType.getInstance(cvFactory.getCvManager())));
		xmlResultingData.setSRMURL(resultingData.getSRMUri());
		return xmlResultingData;
	}

}
