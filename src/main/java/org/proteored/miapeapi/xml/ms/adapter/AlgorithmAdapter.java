package org.proteored.miapeapi.xml.ms.adapter;

import org.proteored.miapeapi.cv.ms.SmoothingType;
import org.proteored.miapeapi.interfaces.Adapter;
import org.proteored.miapeapi.interfaces.Algorithm;
import org.proteored.miapeapi.xml.ms.autogenerated.MIAPEAlgorithmType;
import org.proteored.miapeapi.xml.ms.autogenerated.ObjectFactory;
import org.proteored.miapeapi.xml.ms.util.MsControlVocabularyXmlFactory;

public class AlgorithmAdapter implements Adapter<MIAPEAlgorithmType> {
	private final Algorithm algorithm;
	private final ObjectFactory factory;
	private final MsControlVocabularyXmlFactory cvFactory;

	public AlgorithmAdapter(Algorithm algorithm, ObjectFactory factory,
			MsControlVocabularyXmlFactory cvFactory) {
		this.algorithm = algorithm;
		this.factory = factory;
		this.cvFactory = cvFactory;
	}

	@Override
	public MIAPEAlgorithmType adapt() {
		MIAPEAlgorithmType xmlAlgorithm = factory.createMIAPEAlgorithmType();
		xmlAlgorithm.setCatalogNumber(algorithm.getCatalogNumber());
		xmlAlgorithm.setComments(algorithm.getComments());
		xmlAlgorithm.setDescription(algorithm.getDescription());
		xmlAlgorithm.setManufacturer(algorithm.getManufacturer());
		xmlAlgorithm.setModel(algorithm.getModel());
		xmlAlgorithm.setName(cvFactory.createCV(algorithm.getName(), null,
				SmoothingType.getInstance(cvFactory.getCvManager())));
		xmlAlgorithm.setVersion(algorithm.getVersion());
		xmlAlgorithm.setParameters(algorithm.getParameters());
		xmlAlgorithm.setURI(algorithm.getURI());
		return xmlAlgorithm;
	}

}
