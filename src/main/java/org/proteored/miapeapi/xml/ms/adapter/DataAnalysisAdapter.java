package org.proteored.miapeapi.xml.ms.adapter;

import org.proteored.miapeapi.cv.ms.SoftwareName;
import org.proteored.miapeapi.cv.msi.DataTransformation;
import org.proteored.miapeapi.interfaces.Adapter;
import org.proteored.miapeapi.interfaces.ms.DataAnalysis;
import org.proteored.miapeapi.xml.ms.autogenerated.MSDataAnalysis;
import org.proteored.miapeapi.xml.ms.autogenerated.ObjectFactory;
import org.proteored.miapeapi.xml.ms.util.MsControlVocabularyXmlFactory;

public class DataAnalysisAdapter implements Adapter<MSDataAnalysis> {
	private final DataAnalysis peakListGeneration;
	private final ObjectFactory factory;
	private final MsControlVocabularyXmlFactory cvFactory;

	public DataAnalysisAdapter(DataAnalysis peakListGeneration, ObjectFactory factory,
			MsControlVocabularyXmlFactory cvFactory) {
		this.peakListGeneration = peakListGeneration;
		this.factory = factory;
		this.cvFactory = cvFactory;
	}

	@Override
	public MSDataAnalysis adapt() {
		MSDataAnalysis xmlDataAnalysis = factory.createMSDataAnalysis();
		xmlDataAnalysis.setParametersLocation(peakListGeneration.getParametersLocation());
		xmlDataAnalysis.setName(cvFactory.createCV(peakListGeneration.getName(), null,
				SoftwareName.getInstance(cvFactory.getCvManager())));
		xmlDataAnalysis.setCatalogNumber(peakListGeneration.getCatalogNumber());
		xmlDataAnalysis.setCustomizations(peakListGeneration.getCustomizations());
		xmlDataAnalysis.setComments(peakListGeneration.getComments());
		xmlDataAnalysis.setDescription(cvFactory.createCV(peakListGeneration.getDescription(),
				null, DataTransformation.getInstance(cvFactory.getCvManager())));
		xmlDataAnalysis.setManufacturer(peakListGeneration.getManufacturer());
		xmlDataAnalysis.setModel(peakListGeneration.getModel());
		xmlDataAnalysis.setParameters(peakListGeneration.getParameters());
		xmlDataAnalysis.setURI(peakListGeneration.getURI());
		xmlDataAnalysis.setVersion(peakListGeneration.getVersion());
		return xmlDataAnalysis;
	}

}
