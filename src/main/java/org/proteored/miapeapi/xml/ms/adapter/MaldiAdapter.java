package org.proteored.miapeapi.xml.ms.adapter;

import org.proteored.miapeapi.cv.ms.LaserType;
import org.proteored.miapeapi.cv.ms.MaldiDissociationMethod;
import org.proteored.miapeapi.interfaces.Adapter;
import org.proteored.miapeapi.interfaces.ms.Maldi;
import org.proteored.miapeapi.xml.ms.autogenerated.MSMALDI;
import org.proteored.miapeapi.xml.ms.autogenerated.ObjectFactory;
import org.proteored.miapeapi.xml.ms.util.MsControlVocabularyXmlFactory;

public class MaldiAdapter implements Adapter<MSMALDI> {
	private final Maldi maldi;
	private final ObjectFactory factory;
	private final MsControlVocabularyXmlFactory cvFactory;

	public MaldiAdapter(Maldi maldi, ObjectFactory factory, MsControlVocabularyXmlFactory cvFactory) {
		this.maldi = maldi;
		this.factory = factory;
		this.cvFactory = cvFactory;
	}

	@Override
	public MSMALDI adapt() {
		MSMALDI xmlMaldi = factory.createMSMALDI();
		xmlMaldi.setExtraction(maldi.getExtraction());
		xmlMaldi.setLaser(cvFactory.createCV(maldi.getLaser(), null,
				LaserType.getInstance(cvFactory.getCvManager())));
		xmlMaldi.setMatrix(maldi.getMatrix());
		xmlMaldi.setName(maldi.getName());
		xmlMaldi.setOparameters(maldi.getLaserParameters());
		xmlMaldi.setPlateType(maldi.getPlateType());
		xmlMaldi.setDissociationSummary(maldi.getDissociationSummary());
		xmlMaldi.setDissociation(cvFactory.createCV(maldi.getDissociation(), null,
				MaldiDissociationMethod.getInstance(cvFactory.getCvManager())));
		xmlMaldi.setWaveLength(maldi.getLaserWaveLength());
		return xmlMaldi;
	}

}
