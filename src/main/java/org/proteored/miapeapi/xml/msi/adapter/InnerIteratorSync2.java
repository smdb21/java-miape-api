package org.proteored.miapeapi.xml.msi.adapter;

import java.util.Iterator;
import java.util.Set;

import org.apache.log4j.Logger;
import org.proteored.miapeapi.xml.pride.autogenerated.ExperimentType.MzData.SpectrumList.Spectrum;

/**
 * Simple wrapper class to allow synchronisation on the hasNext() and next()
 * methods of the
 * iterator.
 */
public class InnerIteratorSync2<T> {
	private static Logger log = Logger.getLogger("log4j.logger.org.proteored");
	private static int i = 1;
	private Iterator<T> iter = null;
	// private boolean canDoNext = true;
	private final Set<Integer> spectrumRefs;

	public InnerIteratorSync2(Iterator<T> aIterator, Set<Integer> spectrumRefs) {
		iter = aIterator;
		this.spectrumRefs = spectrumRefs;
	}

	public synchronized T next() {
		// while (!this.canDoNext) {
		// try {
		// wait();
		// } catch (InterruptedException e) {
		// e.printStackTrace();
		// }
		// }
		T result = null;
		if (iter.hasNext()) {
			result = iter.next();
			if (result instanceof Spectrum) {
				if (!spectrumRefs.contains(((Spectrum) result).getId()))
					iter.remove();
			}
		}
		// this.canDoNext = false;
		return result;
	}

	// public synchronized void remove(boolean reallyRemove) {
	// if (reallyRemove) {
	// log.info("Remove " + i++);
	// iter.remove();
	// }
	// this.canDoNext = true;
	// }
}
