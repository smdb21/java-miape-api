package org.proteored.miapeapi.xml.msi.adapter;

import org.apache.log4j.Logger;
import org.proteored.miapeapi.interfaces.msi.IdentifiedProtein;
import org.proteored.miapeapi.xml.msi.autogenerated.MSIIdentifiedProtein;
import org.proteored.miapeapi.xml.msi.autogenerated.MSIIdentifiedProteinSet;
import org.proteored.miapeapi.xml.msi.autogenerated.ObjectFactory;
import org.proteored.miapeapi.xml.msi.util.MSIControlVocabularyXmlFactory;
import org.proteored.miapeapi.xml.util.MiapeXmlUtil;
import org.proteored.miapeapi.xml.util.parallel.InnerIteratorSync;
import org.proteored.miapeapi.xml.util.parallel.InnerLock;

/**
 * Runnable that requests the next spectrum from the synchronised iterator
 * wrapper, and validates it.
 */
public class InnerProteinAdapter<T> implements Runnable {
	private static Logger log = Logger.getLogger("log4j.logger.org.proteored");
	InnerIteratorSync<T> iter = null;

	private InnerLock lock = null;
	private final int count = 0;
	private int iNumber = -1;
	private final ObjectFactory factory;
	private final MSIControlVocabularyXmlFactory cvFactory;
	private final MSIIdentifiedProteinSet proteinSetXML;

	public InnerProteinAdapter(InnerIteratorSync<T> aIterator, InnerLock aLock,
			int aNumber, ObjectFactory factory,
			MSIControlVocabularyXmlFactory cvFactory,
			MSIIdentifiedProteinSet proteinSetXML) {
		iter = aIterator;
		lock = aLock;
		iNumber = aNumber;
		this.factory = factory;
		this.cvFactory = cvFactory;
		this.proteinSetXML = proteinSetXML;

	}

	@Override
	public void run() {
		T s = null;
		while ((s = iter.next()) != null) {
			if (s instanceof IdentifiedProtein) {
				IdentifiedProtein protein = (IdentifiedProtein) s;
				log.debug("Processing protein: " + protein.getAccession()
						+ " from processor '" + this.iNumber + "'");
				int protein_id = -1;

				MSIIdentifiedProtein identifiedProteinXML = new IdentifiedProteinAdapter(
						protein, factory, cvFactory).adapt();
				// save the protein_id to add it then in the peptides
				protein_id = MiapeXmlUtil.getIdFromXMLId(identifiedProteinXML
						.getId());
				proteinSetXML.getMSIIdentifiedProtein().add(
						identifiedProteinXML);

				/**
				 * Due to in the model the peptides are children of the protein,
				 * this loop add to the peptideSet variable all the peptides
				 * that are found in the protein
				 */
				// List<IdentifiedPeptide> identifiedPeptides =
				// protein.getIdentifiedPeptides();
				// if (identifiedPeptides != null) {
				// for (IdentifiedPeptide identifiedPeptide :
				// identifiedPeptides) {
				// peptideSetXML.getMSIIdentifiedPeptide().add(
				// new IdentifiedPeptideAdapter(identifiedPeptide, factory,
				// cvFactory)
				// .adapt());
				// }
				// }
			}
		}
		lock.updateDoneCount();
	}

	// public int getCount() {
	// return count;
	// }
}
