package org.proteored.miapeapi.xml.msi.adapter;

import org.proteored.miapeapi.cv.ms.MSFileType;
import org.proteored.miapeapi.interfaces.Adapter;
import org.proteored.miapeapi.interfaces.msi.InputData;
import org.proteored.miapeapi.xml.msi.autogenerated.MSIInputData;
import org.proteored.miapeapi.xml.msi.autogenerated.ObjectFactory;
import org.proteored.miapeapi.xml.msi.util.MSIControlVocabularyXmlFactory;
import org.proteored.miapeapi.xml.util.MiapeXmlUtil;

public class InputDataAdapter implements Adapter<MSIInputData> {
	private final InputData inputData;
	private final ObjectFactory factory;
	private final MSIControlVocabularyXmlFactory cvFactory;

	public InputDataAdapter(InputData inputData, ObjectFactory factory,
			MSIControlVocabularyXmlFactory cvFactory) {
		this.inputData = inputData;
		this.factory = factory;
		this.cvFactory = cvFactory;
	}

	@Override
	public MSIInputData adapt() {
		MSIInputData xmlInputData = factory.createMSIInputData();
		xmlInputData.setDescription(inputData.getDescription());
		xmlInputData.setMSFileType(cvFactory.createCV(inputData.getMSFileType(), null,
				MSFileType.getInstance(cvFactory.getCvManager())));
		xmlInputData.setName(inputData.getName());
		xmlInputData.setSourceDataURL(inputData.getSourceDataUrl());

		xmlInputData.setId(MiapeXmlUtil.IdentifierPrefixes.INPUTDATA.getPrefix()
				+ inputData.getId());

		return xmlInputData;
	}

}
