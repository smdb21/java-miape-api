package org.proteored.miapeapi.xml.pride.ms;

import java.util.List;
import java.util.Map;
import java.util.Set;

import org.proteored.miapeapi.cv.Accession;
import org.proteored.miapeapi.cv.ControlVocabularyManager;
import org.proteored.miapeapi.interfaces.Equipment;
import org.proteored.miapeapi.interfaces.ms.Esi;
import org.proteored.miapeapi.xml.pride.autogenerated.CvParamType;
import org.proteored.miapeapi.xml.pride.autogenerated.InstrumentDescriptionType;
import org.proteored.miapeapi.xml.pride.util.Parameter;
import org.proteored.miapeapi.xml.pride.util.PrideControlVocabularyXmlFactory;
import org.proteored.miapeapi.xml.pride.util.Utils;
import org.proteored.miapeapi.xml.util.MiapeXmlUtil;

public class EsiImpl implements Esi {

	private final InstrumentDescriptionType instrument;
	private final Map<String, CvParamType> sourceCVParams;
	private List<Accession> exclusionList;
	private String name = null;
	private final ControlVocabularyManager cvManager;

	public EsiImpl(InstrumentDescriptionType instrument, Map<String, CvParamType> sourceCVParams,
			ControlVocabularyManager cvManager) {
		this.instrument = instrument;
		this.sourceCVParams = sourceCVParams;
		this.cvManager = cvManager;

	}

	@Override
	public Set<Equipment> getInterfaces() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String getName() {
		if (instrument != null && instrument.getSource() != null) {
			name = Utils.getSourceName(instrument.getSource(), exclusionList, cvManager);
			if (name != null)
				return name;
		}
		return "Esi source";

	}

	@Override
	public String getParameters() {
		StringBuilder sb = new StringBuilder();
		List<Parameter> listParameter = Utils.createListParameter(instrument.getSource()
				.getCvParamOrUserParam(), exclusionList);
		if (listParameter != null)
			for (Parameter parameter : listParameter) {
				sb.append(parameter.getName() + "=" + parameter.getValue());
				sb.append(MiapeXmlUtil.TERM_SEPARATOR);
			}
		return sb.toString();
	}

	@Override
	public Set<Equipment> getSprayers() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String getSupplyType() {
		CvParamType cvParam = PrideControlVocabularyXmlFactory.getCvFromParamType(
				instrument.getSource(),
				org.proteored.miapeapi.cv.ms.SupplyType.getInstance(cvManager));
		if (cvParam != null) {
			return PrideControlVocabularyXmlFactory.writeParam(cvParam);
		} else {
			return null;
		}
	}

}
