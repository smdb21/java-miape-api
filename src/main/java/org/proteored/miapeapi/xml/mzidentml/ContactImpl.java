package org.proteored.miapeapi.xml.mzidentml;

import java.util.List;

import org.proteored.miapeapi.interfaces.User;
import org.proteored.miapeapi.interfaces.ms.MSContact;
import org.proteored.miapeapi.xml.mzidentml.autogenerated.FuGECollectionAuditCollectionType;
import org.proteored.miapeapi.xml.mzidentml.autogenerated.FuGECommonAuditContactRoleType;
import org.proteored.miapeapi.xml.mzidentml.autogenerated.FuGECommonAuditContactType;
import org.proteored.miapeapi.xml.mzidentml.autogenerated.FuGECommonAuditOrganizationType;
import org.proteored.miapeapi.xml.mzidentml.autogenerated.FuGECommonAuditPersonType;
import org.proteored.miapeapi.xml.mzidentml.autogenerated.PSIPIMainMzIdentMLType;
import org.proteored.miapeapi.xml.mzidentml.autogenerated.FuGECommonAuditPersonType.Affiliations;

public class ContactImpl implements MSContact {
	private final List<FuGECommonAuditContactType> listContacts;
	private final String email;
	private final String institution;
	private final String position;
	private final String address; 
	private final String fax;
	private final String phone;
	private final NameCreator nameCreator;


	public ContactImpl(PSIPIMainMzIdentMLType mzIdentML, List<FuGECommonAuditContactType> listContacts, User user) {

		this.listContacts = listContacts;
		FuGECommonAuditContactRoleType contactRole = mzIdentML.getProvider().getContactRole();
		if (contactRole.getRole() != null) {
			position = contactRole.getRole().getCvParam().getName();
		} else {
			position = null;
		}
		if (contactRole.getRole() != null && mzIdentML.getAuditCollection() != null) {
			String contactRef = contactRole.getContactRef();
			FuGECollectionAuditCollectionType auditCollection = mzIdentML.getAuditCollection();
			List<FuGECommonAuditContactType> contactGroup = auditCollection.getContactGroup();

			int count = 0;
			for (FuGECommonAuditContactType contactDetails : contactGroup) { 
				if (contactDetails.getId().equals(contactRef)) {
					break;
				}
				count++;
			}
			if (count < contactGroup.size()) {
				FuGECommonAuditPersonType contactDetails = (FuGECommonAuditPersonType)contactGroup.get(count);
				nameCreator = new NameCreator(contactDetails.getName(), contactDetails.getLastName(), user);
				email = contactDetails.getEmail();
				address = contactDetails.getAddress();
				fax = contactDetails.getFax();
				phone = contactDetails.getPhone();
				institution = getContactPosition(contactDetails);
			} else {
				nameCreator = new NameCreator(user);
				email = null;
				address = null;
				fax = null;
				phone = null;
				institution = null;
			}
		} else {
			nameCreator = new NameCreator(user);
			email = null;
			address = null;
			fax = null;
			phone = null;
			institution = null;
		}
	}



	@Override
	public String getAddress() {
		return address;
	}

	@Override
	public String getCP() {
		return null;
	}

	@Override
	public String getCountry() {
		return null;
	}

	@Override
	public String getDepartment() {
		return null;
	}

	@Override
	public String getEmail() {
		return email;
	}

	@Override
	public String getFax() {
		return fax;
	}

	@Override
	public String getInstitution() {
		return institution;
	}

	@Override
	public String getLastName() {
		return nameCreator.getLastName();
	}

	@Override
	public String getLocality() {
		return null;
	}

	@Override
	public String getName() {
		return nameCreator.getName();

	}

	@Override
	public String getPosition() {
		return position;
	}

	@Override
	public String getTelephone() {
		return phone;
	}

	private String getContactPosition(FuGECommonAuditPersonType contactDetails) {
		List<Affiliations> affiliations = contactDetails.getAffiliations();
		if (contactDetails.getAffiliations() != null && contactDetails.getAffiliations().size()>0) {
			Affiliations aff = affiliations.get(0);
			String orgRef = aff.getOrganizationRef();
			return getInstitution(orgRef);
		}
		return null;
	}

	private String getInstitution(String orgRef) {
		for (FuGECommonAuditContactType contact : listContacts) {
			if (contact instanceof FuGECommonAuditOrganizationType) {
				FuGECommonAuditOrganizationType organization = (FuGECommonAuditOrganizationType) contact;
				if (organization.getId().equals(orgRef)) {
					return organization.getName();
				}
			}
		}
		return null;
	}



	private static class NameCreator {
		private String name;
		private String lastName;
		private User user;

		public NameCreator(User user) {
			this.user = user;
		}
		public NameCreator(String name, String lastName, User user) {
			if (name != null && lastName != null){
				this.name = name;
				this.lastName = lastName;
			} 

		}

		public String getName() {
			if (name != null ) {
				return name;
			} else if (lastName != null){
				return lastName;
			}
			if (user != null) {
				return user.getUserName();
			} 
			return "Unknown";
		}

		public String getLastName() {
			return lastName;
		}

	}

}
