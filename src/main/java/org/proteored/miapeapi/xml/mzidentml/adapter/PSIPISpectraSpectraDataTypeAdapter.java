package org.proteored.miapeapi.xml.mzidentml.adapter;

import org.proteored.miapeapi.cv.ms.MSFileType;
import org.proteored.miapeapi.interfaces.Adapter;
import org.proteored.miapeapi.interfaces.msi.InputData;
import org.proteored.miapeapi.xml.mzidentml.autogenerated.FuGEBioDataExternalDataType.FileFormat;
import org.proteored.miapeapi.xml.mzidentml.autogenerated.ObjectFactory;
import org.proteored.miapeapi.xml.mzidentml.autogenerated.PSIPISpectraSpectraDataType;
import org.proteored.miapeapi.xml.mzidentml.util.MzidentmlControlVocabularyXmlFactory;
import org.proteored.miapeapi.xml.mzidentml.util.Utils;

public class PSIPISpectraSpectraDataTypeAdapter implements Adapter<PSIPISpectraSpectraDataType> {
	private final InputData inputData;
	private final ObjectFactory factory;
	private final MzidentmlControlVocabularyXmlFactory cvFactory;

	public PSIPISpectraSpectraDataTypeAdapter(InputData inputData, ObjectFactory factory,
			MzidentmlControlVocabularyXmlFactory cvFactory) {
		this.cvFactory = cvFactory;
		this.factory = factory;
		this.inputData = inputData;
	}

	@Override
	public PSIPISpectraSpectraDataType adapt() {
		PSIPISpectraSpectraDataType spectraDataXML = factory.createPSIPISpectraSpectraDataType();
		spectraDataXML.setId(Utils.getIdFromString(inputData.getName()));
		spectraDataXML.setName(inputData.getName());
		spectraDataXML.setLocation(inputData.getSourceDataUrl());

		if (inputData.getMSFileType() != null) {
			FileFormat fileFormat = factory.createFuGEBioDataExternalDataTypeFileFormat();
			fileFormat.setCvParam(cvFactory.createOntologyCvParamType(inputData.getMSFileType(),
					null, MSFileType.getInstance(cvFactory.getCvManager())));
			spectraDataXML.setFileFormat(fileFormat);
		}

		return spectraDataXML;
	}

}
