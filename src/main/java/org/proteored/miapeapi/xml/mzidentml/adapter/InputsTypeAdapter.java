package org.proteored.miapeapi.xml.mzidentml.adapter;

import org.proteored.miapeapi.interfaces.Adapter;
import org.proteored.miapeapi.interfaces.msi.MiapeMSIDocument;
import org.proteored.miapeapi.xml.mzidentml.autogenerated.InputsType;
import org.proteored.miapeapi.xml.mzidentml.autogenerated.ObjectFactory;
import org.proteored.miapeapi.xml.mzidentml.autogenerated.PSIPIAnalysisSearchSourceFileType;
import org.proteored.miapeapi.xml.mzidentml.util.MzidentmlControlVocabularyXmlFactory;
import org.proteored.miapeapi.xml.mzidentml.util.Utils;

public class InputsTypeAdapter implements Adapter<InputsType> {
	private final MiapeMSIDocument miapeMSI;
	private final ObjectFactory factory;
	private final MzidentmlControlVocabularyXmlFactory cvFactory;

	public InputsTypeAdapter(MiapeMSIDocument miapeMSI, ObjectFactory factory,
			MzidentmlControlVocabularyXmlFactory cvFactory) {
		this.cvFactory = cvFactory;
		this.factory = factory;
		this.miapeMSI = miapeMSI;

	}

	@Override
	public InputsType adapt() {
		InputsType inputTypeXML = factory.createInputsType();

		// source files: output from the MIAPE repository
		PSIPIAnalysisSearchSourceFileType sourceFilesXML = factory.createPSIPIAnalysisSearchSourceFileType();
		sourceFilesXML.setId(Utils.getIdFromString("Source_file"));
		sourceFilesXML.setName("MIAPE MSI document from ProteoRed repository");
		sourceFilesXML.setLocation("http://www.proteored.org/miapeTool.asp");
		inputTypeXML.getSourceFile().add(sourceFilesXML);
		// source files: output from search engine that has been converted to mzIdentML file
		// from msi_input_protein_set
		// TODO
		/*if (miapeMSI.getIdentifiedProteinsSet() != null) {
			for (IdentifiedProtein identifiedProtein : miapeMSI.getIdentifiedProteins()) {
				PSIPIAnalysisSearchSourceFileType sourceFilesXML2 = factory.createPSIPIAnalysisSearchSourceFileType();
				sourceFilesXML2.setId(Utils.getIdFromString());
				sourceFilesXML2.setName();
				sourceFilesXML2.setLocation();
				inputTypeXML.getSourceFile().add(sourceFilesXML2);
			}
		}*/
		// source files: output from search engine that has been converted to mzIdentML file
		// from msi_input_peptide_set
		// TODO
		/*if (miapeMSI.getIdentifiedPeptideSet() != null) {
			for (IdentifiedProtein identifiedProtein : miapeMSI.getIdentifiedProteins()) {
				PSIPIAnalysisSearchSourceFileType sourceFilesXML2 = factory.createPSIPIAnalysisSearchSourceFileType();
				sourceFilesXML2.setId(Utils.getIdFromString());
				sourceFilesXML2.setName();
				sourceFilesXML2.setLocation();
				inputTypeXML.getSourceFile().add(sourceFilesXML2);
			}
		}*/


		// SearchDatabase
		// from msi_input_data
		/*if (miapeMSI.getInputDatas() != null) {
			if (inputData.getInputParameters() != null) {
				for (InputParameter inputParameter : inputData.getInputParameters()) {
					if (inputParameter.getDatabases() != null) {
						for (Database database : inputParameter.getDatabases()) {
							inputTypeXML.getSearchDatabase().add(new PSIPIAnalysisSearchSearchDatabaseTypeAdapter(database, factory, cvFactory).adapt());
						}
					}
				}
			}
		}

		// SpectraData
		PSIPISpectraSpectraDataType spectraDataXML = factory.createPSIPISpectraSpectraDataType();

		inputTypeXML.getSpectraData().add(new PSIPISpectraSpectraDataTypeAdapter(inputData, factory, cvFactory).adapt());
		 */return inputTypeXML;
	}

}
