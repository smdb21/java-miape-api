package org.proteored.miapeapi.xml.gi.adapter;

import org.proteored.miapeapi.cv.gi.ImageAnalysisSoftwareName;
import org.proteored.miapeapi.interfaces.Adapter;
import org.proteored.miapeapi.interfaces.Algorithm;
import org.proteored.miapeapi.xml.gi.autogenerated.MIAPEAlgorithmType;
import org.proteored.miapeapi.xml.gi.autogenerated.ObjectFactory;
import org.proteored.miapeapi.xml.gi.util.GIControlVocabularyXmlFactory;

public class AlgorithmAdapter implements Adapter<MIAPEAlgorithmType> {
	private final ObjectFactory factory;
	private final GIControlVocabularyXmlFactory cvFactory;
	private final Algorithm algorithm;

	public AlgorithmAdapter(Algorithm algorithm, ObjectFactory factory,
			GIControlVocabularyXmlFactory cvFactory) {
		this.algorithm = algorithm;
		this.factory = factory;
		this.cvFactory = cvFactory;

	}

	@Override
	public MIAPEAlgorithmType adapt() {
		MIAPEAlgorithmType xmlAlgorithm = factory.createMIAPEAlgorithmType();

		xmlAlgorithm.setCatalogNumber(algorithm.getCatalogNumber());
		xmlAlgorithm.setComments(algorithm.getComments());
		xmlAlgorithm.setDescription(algorithm.getDescription());
		xmlAlgorithm.setManufacturer(algorithm.getManufacturer());
		xmlAlgorithm.setModel(algorithm.getModel());
		xmlAlgorithm.setName(cvFactory.createCV(algorithm.getName(), null,
				ImageAnalysisSoftwareName.getInstance(cvFactory.getCvManager())));
		xmlAlgorithm.setVersion(algorithm.getVersion());
		xmlAlgorithm.setParameters(algorithm.getParameters());
		xmlAlgorithm.setURI(algorithm.getURI());

		return xmlAlgorithm;
	}

}
