package org.proteored.miapeapi.xml.gi;

import java.util.Set;

import org.proteored.miapeapi.interfaces.Algorithm;
import org.proteored.miapeapi.interfaces.gi.DataAnalysis;
import org.proteored.miapeapi.interfaces.gi.ImageAnalysisSoftware;
import org.proteored.miapeapi.xml.gi.autogenerated.GIDataAnalysis;
import org.proteored.miapeapi.xml.gi.autogenerated.MIAPEAlgorithmType;
import org.proteored.miapeapi.xml.gi.autogenerated.MIAPESoftwareType;

import gnu.trove.set.hash.THashSet;

public class DataAnalysisImpl implements DataAnalysis {
	private final GIDataAnalysis xmlDataAnalysis;

	public DataAnalysisImpl(GIDataAnalysis xmlDataAnalysis) {
		this.xmlDataAnalysis = xmlDataAnalysis;
	}

	@Override
	public Set<ImageAnalysisSoftware> getDataAnalysisSoftwares() {
		Set<ImageAnalysisSoftware> softwares = new THashSet<ImageAnalysisSoftware>();
		for (MIAPESoftwareType xmlSoftware : xmlDataAnalysis.getGIDataAnalysisSoftware()) {
			softwares.add(new ImageAnalysisSoftwareImpl(xmlSoftware));
		}
		return softwares;
	}

	@Override
	public Set<Algorithm> getDataAnalysisTransformations() {
		Set<Algorithm> algorithms = new THashSet<Algorithm>();
		for (MIAPEAlgorithmType xmlAlgorithm : xmlDataAnalysis.getGIDataAnalysisTransformation()) {
			algorithms.add(new AlgorithmImpl(xmlAlgorithm));
		}

		return algorithms;
	}

	@Override
	public String getInputData() {
		return xmlDataAnalysis.getInputData();
	}

	@Override
	public String getIntent() {
		return xmlDataAnalysis.getIntent();
	}

	@Override
	public String getName() {
		return xmlDataAnalysis.getName();
	}

	@Override
	public String getParameters() {
		return xmlDataAnalysis.getParameters();
	}

	@Override
	public String getType() {
		return xmlDataAnalysis.getType();
	}

}
