package org.proteored.miapeapi.xml.gi.adapter;

import org.proteored.miapeapi.cv.ge.ImageDimensionUnit;
import org.proteored.miapeapi.cv.ge.ImageFormat;
import org.proteored.miapeapi.cv.ge.ImageResolutionUnit;
import org.proteored.miapeapi.interfaces.Adapter;
import org.proteored.miapeapi.interfaces.gi.ImageGelInformatics;
import org.proteored.miapeapi.xml.gi.autogenerated.GIImage;
import org.proteored.miapeapi.xml.gi.autogenerated.ObjectFactory;
import org.proteored.miapeapi.xml.gi.util.GIControlVocabularyXmlFactory;
import org.proteored.miapeapi.xml.util.MiapeXmlUtil;

public class ImageAdapter implements Adapter<GIImage> {
	private final ImageGelInformatics image;
	private final ObjectFactory factory;
	private final GIControlVocabularyXmlFactory cvFactory;

	public ImageAdapter(ImageGelInformatics image, ObjectFactory factory,
			GIControlVocabularyXmlFactory cvFactory) {
		this.cvFactory = cvFactory;
		this.factory = factory;
		this.image = image;
	}

	@Override
	public GIImage adapt() {
		GIImage xmlImage = factory.createGIImage();
		xmlImage.setBitDepth(image.getBitDepth());
		xmlImage.setDimensionX(cvFactory.createParamUnit(image.getDimensionX(),
				image.getDimensionUnit(), ImageDimensionUnit.getInstance(cvFactory.getCvManager())));
		xmlImage.setDimensionY(cvFactory.createParamUnit(image.getDimensionY(),
				image.getDimensionUnit(), ImageDimensionUnit.getInstance(cvFactory.getCvManager())));
		xmlImage.setFormat(cvFactory.createCV(image.getFormat(), null,
				ImageFormat.getInstance(cvFactory.getCvManager())));
		xmlImage.setId(MiapeXmlUtil.IdentifierPrefixes.IMAGE.getPrefix() + image.getId());
		xmlImage.setLocation(image.getLocation());
		xmlImage.setName(image.getName());
		xmlImage.setOrientation(image.getOrientation());
		xmlImage.setResolution(cvFactory.createParamUnit(image.getResolution(),
				image.getResolutionUnit(),
				ImageResolutionUnit.getInstance(cvFactory.getCvManager())));
		xmlImage.setType(image.getType());

		return xmlImage;
	}

}
