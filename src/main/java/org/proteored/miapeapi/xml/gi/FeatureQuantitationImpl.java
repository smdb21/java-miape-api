package org.proteored.miapeapi.xml.gi;

import java.util.HashSet;
import java.util.Set;

import org.proteored.miapeapi.interfaces.Algorithm;
import org.proteored.miapeapi.interfaces.gi.FeatureQuantitation;
import org.proteored.miapeapi.xml.gi.autogenerated.GIFeatureQuantitation;
import org.proteored.miapeapi.xml.gi.autogenerated.MIAPEAlgorithmType;

public class FeatureQuantitationImpl implements FeatureQuantitation {
	private final GIFeatureQuantitation featureQuantitationXML;

	public FeatureQuantitationImpl(GIFeatureQuantitation featureQuantitatioXML) {
		this.featureQuantitationXML = featureQuantitatioXML;
	}

	@Override
	public Set<Algorithm> getFeatureQuantitationAlgorithms() {
		Set<Algorithm> quantitationAlgorithms = new HashSet<Algorithm>();
		if (featureQuantitationXML.getGIFeatureQuantitationAlgorithm() != null) {
			for (MIAPEAlgorithmType algorithm : featureQuantitationXML.getGIFeatureQuantitationAlgorithm()) {
				quantitationAlgorithms.add(new AlgorithmImpl(algorithm));
			}
		}
		return quantitationAlgorithms;
	}

	@Override
	public Set<Algorithm> getFeatureQuantitationBackgrounds() {
		Set<Algorithm> quantitationBackgrounds = new HashSet<Algorithm>();
		if (featureQuantitationXML.getGIFeatureQuantitationBackground() != null) {
			for (MIAPEAlgorithmType algorithm : featureQuantitationXML.getGIFeatureQuantitationBackground()) {
				quantitationBackgrounds.add(new AlgorithmImpl(algorithm));
			}
		}
		return quantitationBackgrounds;
	}

	@Override
	public Set<Algorithm> getFeatureQuantitationNormalizations() {
		Set<Algorithm> quantitationNormalizations = new HashSet<Algorithm>();
		if (featureQuantitationXML.getGIFeatureQuantitationNormalization() != null) {
			for (MIAPEAlgorithmType algorithm : featureQuantitationXML.getGIFeatureQuantitationNormalization()) {
				quantitationNormalizations.add(new AlgorithmImpl(algorithm));
			}
		}
		return quantitationNormalizations;
	}

	@Override
	public String getName() {
		return featureQuantitationXML.getName();
	}

	@Override
	public String getStepOrder() {
		return featureQuantitationXML.getStepOrder();
	}

	@Override
	public String getType() {
		return featureQuantitationXML.getStepOrder();
	}

}
